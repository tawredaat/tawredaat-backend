input[type="number"]{
    
}
.quantity-holder{
  h5{
    margin-bottom: 8px !important;
  }
    .qty{
        display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    p{
        position: absolute;
    bottom: -20px;
    font-size: 14px;
    white-space: nowrap;
    user-select: none;
    }
        .plus,.minus  {
            color: #646567;
            background-color: #FFF;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 35px;
            height: 30px;
            border: 1px solid #646567;
            cursor: pointer; 
            font-size: 21px;
            font-weight: 700;
            border-radius: 3px;
            &:hover{
                background-color: $primary-2 !important;
                color: #FFF;
                border-color: $primary-2;
            }
            &[disabled]{
                pointer-events: none;
                color: #dc3545;
            }
        }
        .count{
            width: 80px;
            height: 30px;
            text-align: center;
            border: 0;
            border-top: 1px solid;
            border-bottom: 1px solid;
            margin: 0;
            padding: 0;
        }
    }
/*Prevent text selection*/
span{
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
}
}
         
.alert{
    position: fixed;
    z-index: 555;
    width: 100%;
    padding: 20px;
    visibility: hidden;
    strong{
        font-weight: 700;
        margin: 0 10px;
    }
    &.show{
        opacity: 1;
        visibility: visible;
    }
}

.custom-checkbox{

    .custom-control-label{
        &::after,
        &::before{
            top: 2px;
            width: 18px;
            height: 18px;
            box-shadow: none;
            outline: 0;
        }
    }
}
.custom-checkbox .custom-control-input:checked ~ .custom-control-label::before {
    background-color:$primary-2;
}


//  style for input

.input-holder {
    position: relative;
    margin-bottom: 21px;
    &.label-moved{
      label{
        top: 0;
        background: #fff;
        padding: 0 5px;
        font-size: 14px;
        font-weight: 500;
        letter-spacing: -0.42px;
        color: #002575;
      }
      textarea{
        border-color: #002575 !important;
      }
    }
    input {
      min-height: 40px;
      padding: 0;
      border: 1px solid #DDD;
      border-radius: 3px;
      width: 100%;
      text-indent: 16px;
      font-size: 16px;
      font-weight: 500;
      line-height: 1.5;
      letter-spacing: 0.15px;
      color: rgba(0, 0, 0, 0.87);
      border-radius: 4px;
    }
    label {
      color: #646567;
      font-size: 14px;
      font-weight: bold;
      letter-spacing: 0.15px;
      white-space: nowrap;
      margin-bottom: 8px;
    }
    .invalid-feedback {
      position: absolute;
      text-align: left;
    }
    label,
    input {
      transition: all ease-in-out 0.2s;
    }
    /**
  * Translate down and scale the label up to cover the placeholder,
  * when following an input (with placeholder-shown support).
  * Also make sure the label is only on one row, at max 2/3rds of the
  * fieldâ€”to make sure it scales properly and doesn't wrap.
  */
    input:placeholder-shown + label {
    }
  
    /**
      * By default, the placeholder should be transparent. Also, it should 
      * inherit the transition.
      */
    // ::-webkit-input-placeholder {
    //   opacity: 0;
    //   transition: inherit;
    // }
    // /**
    //   * Show the placeholder when the input is focused.
    //   */
    // input:focus::-webkit-input-placeholder {
    //   opacity: 1;
    // }
  
    /**
      * When the element is focused, remove the label transform.
      * Also, do this when the placeholder is _not_ shown, i.e. when 
      * there's something in the input at all.
      */
    // input:not(:placeholder-shown),
    // input:focus {
    //   border-color: #002575;
    //   & + label {
    //     top: 0;
    //     background: #fff;
    //     padding: 0 5px;
    //     font-size: 14px;
    //     font-weight: 500;
    //     letter-spacing: -0.42px;
    //     color: #002575;
    //   }
    // }
  }
  .form-group {
    margin-bottom: 0 !important;
  }
  .form-control:invalid {
    background: none !important;
  }

  .is-invalid~.invalid-feedback, .is-invalid~.invalid-tooltip, .was-validated :invalid~.invalid-feedback, .was-validated :invalid~.invalid-tooltip {
    // display: block;
    opacity: 1;
}

.invalid-feedback {
    // display: none;
    opacity: 0;
    font-size: 14px;
    width: 100%;
    margin-top: .25rem;
    font-size: 80%;
    color: #dc3545;
    font-weight: 600;
    transition: opacity ease-in-out 0.4s;
}

/***** RADIO BUTTON STYLES *****/
.rdio {
  position: relative;
  input[type="radio"] {
    opacity: 0;
  }
  label {
    padding-left: 10px;
    cursor: pointer;
    margin-bottom: 7px !important;
    &:before {
      width: 18px;
      height: 18px;
      position: absolute;
      top: 1px;
      left: 0;
      content: '';
      display: inline-block;
      -moz-border-radius: 50px;
      -webkit-border-radius: 50px;
      border-radius: 50px;
      border: 1px solid #23408d;
      background: #fff;
    }
  }
  input[type="radio"] {
      margin:0px;
    &:disabled + label {
      color: #999;
      &:before {
        background-color: #23408d;
      }
    }
    &:checked + label::after {
      content: '';
      position: absolute;
      top: 5px;
      left: 4px;
      display: inline-block;
      font-size: 11px;
      width: 10px;
      height: 10px;
      background-color: #23408d;
      -moz-border-radius: 50px;
      -webkit-border-radius: 50px;
      border-radius: 50px;
    }
  }
}

.rdio-default input[type="radio"]:checked + label:before {
  border-color: #23408d;
}

.rdio-primary input[type="radio"]:checked + label {
  &:before {
    border-color: #23408d;
  }
  &::after {
    background-color: #23408d; 
  }
}